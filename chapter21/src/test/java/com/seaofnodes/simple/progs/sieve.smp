// -*- mode: java;  -*-
// The main Sieve array
bool[] !ary = new bool[arg];
// The primes less than arg
int[] !primes = new int[arg>>1];
// Number of primes so far, searching at index p
int nprimes = 0, p=2;
// Find primes while p^2 < arg
while( p*p < arg ) {
    // skip marked non-primes
    while( ary[p] ) p++;
    // p is now a prime
    primes[nprimes++] = p;
    // Mark out the rest non-primes
    for( int i = p + p; i < ary#; i+= p )
        ary[i] = true;
    p++;
}

// Now just collect the remaining primes, no more marking
for( ; p < arg; p++ )
    if( !ary[p] )
        primes[nprimes++] = p;

// Copy/shrink the result array
int[] !rez = new int[nprimes];
for( int j=0; j < nprimes; j++ )
    rez[j] = primes[j];
return rez;
