// -*- mode: java;  -*-

val _exit = { u8[~] msg ->
    sys.io.p(msg);
    sys.libc._exit(1);
};
val usage = { -> _exit("stdin must look like [4, 3, 2, 1]"); };

// Scanner
struct Scan {
    int !x;
    u8[~] buf;
};

// Skip whitespace
val skip = { Scan s ->
    while( s.buf[s.x] <= 32 )
        s.x++;
};

// Require specific syntax or usage
val require = { Scan s, u8 c ->
    skip(s);
    if( s.buf[s.x++] != c )
        usage();
};

val number = { Scan s ->
    skip(s);
    i32 n = 0;
    while( '0' <= s.buf[s.x] & s.buf[s.x] <= '9' )
        n = n*10 + (s.buf[s.x++] - '0');
    return n;
};


// Read from stdin a line of the form "[ 4, 3, 2, 1]" and print it sorted.
val main = { ->
    Scan !s = new Scan{ buf = sys.io.stdin(); };
    while( s.x < s.buf# ) {
        require(s,'[');
        int n = number(s);
        sys.libc._exit(n);
    };
    return 0;
};
